package passwordmanager.interfaces;


import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

import passwordmanager.user.EntryManager;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.xd
 */


/**
 *
 * @author Joshua
 */
public class addEntry extends javax.swing.JFrame {
    private EntryManager entryManager;

    /**
     * Creates new form addEntry
     * @param entryManager
     */
    public addEntry(EntryManager entryManager) {
       initComponents();
       this.entryManager = entryManager;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        txtNameOfAccount = new javax.swing.JTextField();
        txtUsername = new javax.swing.JTextField();
        txtPassword = new javax.swing.JTextField();
        txtPasswordAge = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtHint = new javax.swing.JTextField();
        txtLink = new javax.swing.JTextField();
        lblNameOfAccount = new javax.swing.JLabel();
        lblUsername = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        lblPasswordAge = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        lblHint = new javax.swing.JLabel();
        lblLink = new javax.swing.JLabel();
        butBack = new javax.swing.JButton();
        butAddPassword = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtNameOfAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameOfAccountActionPerformed(evt);
            }
        });

        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });

        lblNameOfAccount.setText("Name of Account*");

        lblUsername.setText("Username*");

        lblPassword.setText("Password*");

        lblPasswordAge.setText("Password Age*");

        lblEmail.setText("Email");

        lblHint.setText("Hint");

        lblLink.setText("Link");

        butBack.setText("Back");
        butBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butBackActionPerformed(evt);
            }
        });

        butAddPassword.setText("Add Password");
        butAddPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butAddPasswordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNameOfAccount)
                    .addComponent(lblUsername)
                    .addComponent(lblPassword)
                    .addComponent(lblPasswordAge)
                    .addComponent(lblEmail)
                    .addComponent(lblHint)
                    .addComponent(lblLink)
                    .addComponent(butBack))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(butAddPassword)
                    .addComponent(txtNameOfAccount, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                    .addComponent(txtUsername)
                    .addComponent(txtPassword)
                    .addComponent(txtPasswordAge)
                    .addComponent(txtEmail)
                    .addComponent(txtHint)
                    .addComponent(txtLink))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNameOfAccount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNameOfAccount))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUsername))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPassword))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPasswordAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPasswordAge))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmail))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtHint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHint))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblLink)
                    .addComponent(txtLink, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(butBack, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(butAddPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void txtNameOfAccountActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        // TODO add your handling code here:
    }                                                

    private void butAddPasswordActionPerformed(java.awt.event.ActionEvent evt) {    
        //need error handling

        int id = entryManager.getNumEntries();
        String account = txtNameOfAccount.getText();
        String username = txtUsername.getText();
        String password = txtPassword.getText();

        String email = txtEmail.getText();
        String hint = txtHint.getText();
        String passAge = txtPasswordAge.getText();
        
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
	LocalDate passDate = LocalDate.parse("23/12/1999", formatter);
        
        if (username.equals("") || "".equals(password) || "".equals(account) ){
             JOptionPane.showMessageDialog(null,"Please complete all fields marked *", "Notificaton",3);
             System.out.println("hello");
             
        } else {
              if(email.isEmpty() && hint.isEmpty()){
                entryManager.addEntry(id, account, username, password, passDate);clearTextFields();
            }
            else if (email.isEmpty()){
                entryManager.addEntry(id, account, username, password, hint, passDate);
                clearTextFields();
            }
            else if (hint.isEmpty()){
                if(checkEmailIsValid(email)){
                entryManager.addEntry(id,account,username,password,passDate,email);
                clearTextFields();
                }
                else{
                    JOptionPane.showMessageDialog(null,"Please Enter a Valid Email", "Notificaton",3);
                }
            }
            else{
                if(checkEmailIsValid(email)){
                    entryManager.addEntry(id, account, username, password, hint, email, passDate);
                    clearTextFields();
                }
                else{
                        JOptionPane.showMessageDialog(null,"Please Enter a Valid Email", "Notificaton",3);
                        }
                
            }
             
        }
 
       

        //update view table
    }
    private boolean checkEmailIsValid(String email){
        String pattern = "^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$";
        return Pattern.compile(pattern).matcher(email).matches();
    }
    private void clearTextFields(){
        txtNameOfAccount.setText(null);
        txtUsername.setText(null);
        txtPassword.setText(null);
        txtPasswordAge.setText(null);
        txtEmail.setText(null);
        txtHint.setText(null);
        txtLink.setText(null);
    }
    private void butBackActionPerformed(java.awt.event.ActionEvent evt) {                                        
        this.dispose();
        //obj.show();
    }                                       

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(addEntry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(addEntry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(addEntry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(addEntry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new addEntry().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton butAddPassword;
    private javax.swing.JButton butBack;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblHint;
    private javax.swing.JLabel lblLink;
    private javax.swing.JLabel lblNameOfAccount;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPasswordAge;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtHint;
    private javax.swing.JTextField txtLink;
    private javax.swing.JTextField txtNameOfAccount;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtPasswordAge;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration                   
}
